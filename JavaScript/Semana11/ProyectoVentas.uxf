<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>0</x><y>0</y><w>280</w><h>250</h></coordinates><panel_attributes>Orden
--
idOrden: number
productos[]: Producto
contadorProductosAgregados: number
_contadorOrdenes: number_
_MAX PRODUCTOS: number = 5_
--
Orden()
agregarProducto(producto)
calcularTotal(): number
mostrarOrden()
--
Responsibilities
-- Crear objetos Orden
*-- Administrar los productos de una orden*</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>420</x><y>0</y><w>210</w><h>130</h></coordinates><panel_attributes>VentasTest
--
Esto no es una clase
Es la prueba de creacion
de objetos Producto y Orden
--
Responsibilities
-- Ejecutar la prueba de
la aplicacion Ventas
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>350</y><w>210</w><h>260</h></coordinates><panel_attributes>Producto
--
idProducto: number
nombre: string
precio: number
_contadorProductos: number_
--
Producto()
getIdProducto(): number
getNombre(): string
setNombre:(nombre)
getPrecio(): number
setPrecio(): number
toString(): string
--
Responsibilities
-- Crear objetos de tipo Producto</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>100</x><y>240</y><w>240</w><h>120</h></coordinates><panel_attributes>&lt;&lt;Un Producto se agrega a una Orden&gt;&gt;</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>30</y><w>170</w><h>40</h></coordinates><panel_attributes>lt=&lt;.&gt;
</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element></diagram>